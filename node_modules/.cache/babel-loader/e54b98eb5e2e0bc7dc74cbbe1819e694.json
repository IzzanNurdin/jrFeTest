{"ast":null,"code":"/**\r\n * A type-safe querySelector function, which throws if the given element was not found\r\n */\nexport function querySelector(selector) {\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n  var element = parent.querySelector(selector);\n\n  if (!element) {\n    throw \"Could not find element with selector \\\"\".concat(selector, \"\\\"\");\n  }\n\n  return element;\n}","map":{"version":3,"sources":["E:\\IzzanNurdin\\Job\\Tests\\Kata\\jr-fe-test\\src\\utils\\dom\\querySelector.ts"],"names":["querySelector","selector","parent","document","body","element"],"mappings":"AAAA;;;AAGA,OAAO,SAASA,aAAT,CAA0CC,QAA1C,EAA6F;AAAA,MAAjCC,MAAiC,uEAAfC,QAAQ,CAACC,IAAM;AAClG,MAAMC,OAAO,GAAGH,MAAM,CAACF,aAAP,CAAqBC,QAArB,CAAhB;;AACA,MAAI,CAACI,OAAL,EAAc;AACZ,2DAA+CJ,QAA/C;AACD;;AACD,SAAOI,OAAP;AACD","sourcesContent":["/**\r\n * A type-safe querySelector function, which throws if the given element was not found\r\n */\r\nexport function querySelector<E extends Element>(selector: string, parent: Element = document.body) {\r\n  const element = parent.querySelector(selector);\r\n  if (!element) {\r\n    throw `Could not find element with selector \"${selector}\"`;\r\n  }\r\n  return element as E;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}