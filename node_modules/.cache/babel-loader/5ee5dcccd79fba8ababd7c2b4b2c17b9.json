{"ast":null,"code":"import { Circle } from '@kata-kit/loading';\nimport React__default, { createElement, Fragment, Component } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport ThemedComponent, { variables } from '@kata-kit/theme';\nimport { darken, lighten } from 'polished';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\nvar primary = {\n  backgroundColor: variables.colors.cobalt,\n  backgroundColorHover: variables.colors.semiCobalt,\n  backgroundColorActive: variables.colors.darkCobalt,\n  textColor: variables.colors.white,\n  linkColorHover: variables.colors.white,\n  linkColorActive: variables.colors.white\n};\nvar secondary = {\n  backgroundColor: variables.colors.gray10,\n  backgroundColorHover: variables.colors.gray20,\n  backgroundColorActive: variables.colors.gray70,\n  textColor: variables.colors.gray50,\n  linkColorHover: variables.colors.gray50,\n  linkColorActive: variables.colors.white\n};\nvar success = {\n  backgroundColor: variables.colors.green,\n  backgroundColorHover: lighten(0.025, variables.colors.green),\n  backgroundColorActive: darken(0.025, variables.colors.green),\n  textColor: variables.colors.white,\n  linkColorHover: variables.colors.white,\n  linkColorActive: variables.colors.white\n};\nvar warning = {\n  backgroundColor: variables.colors.yellow,\n  backgroundColorHover: lighten(0.05, variables.colors.yellow),\n  backgroundColorActive: darken(0.025, variables.colors.yellow),\n  textColor: variables.colors.gray70,\n  linkColorHover: variables.colors.gray70,\n  linkColorActive: variables.colors.gray70\n};\nvar danger = {\n  backgroundColor: variables.colors.red,\n  backgroundColorHover: lighten(0.05, variables.colors.red),\n  backgroundColorActive: darken(0.05, variables.colors.red),\n  textColor: variables.colors.white,\n  linkColorHover: variables.colors.white,\n  linkColorActive: variables.colors.white\n};\nvar white = {\n  backgroundColor: variables.colors.white,\n  backgroundColorHover: variables.colors.gray10,\n  backgroundColorActive: variables.colors.gray70,\n  textColor: variables.colors.gray70,\n  linkColorHover: variables.colors.gray70,\n  linkColorActive: variables.colors.white,\n  borderColor: variables.colors.gray30,\n  borderColorActive: variables.colors.gray70\n};\nvar buttonThemes = {\n  primary: primary,\n  secondary: secondary,\n  success: success,\n  warning: warning,\n  danger: danger,\n  white: white,\n  info: primary,\n  defaultTheme: secondary\n};\nvar themes = {\n  button: buttonThemes\n};\n\nvar ButtonBase = function ButtonBase(props) {\n  return css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    display: \", \";\\n    position: relative;\\n    width: \", \";\\n    background: none;\\n    letter-spacing: 0.2px;\\n    border: 1px solid transparent;\\n    font-size: \", \";\\n    line-height: \", \";\\n    text-decoration: none;\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: middle;\\n    user-select: none;\\n    transition: all 0.3s ease;\\n\\n    &:hover {\\n      text-decoration: none;\\n    }\\n\\n    &:focus {\\n      text-decoration: none;\\n      outline: 0;\\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n    }\\n\\n    &.focus {\\n      outline: 0;\\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n    }\\n\\n    &:not(:disabled):not(.disabled) {\\n      cursor: pointer;\\n    }\\n\\n    &.disabled,\\n    &:disabled {\\n      opacity: 0.65;\\n      color: \", \";\\n    }\\n\\n    &.icon {\\n      height: 32px;\\n      width: 32px;\\n      padding: 4px 8px;\\n      text-align: center;\\n      background-color: transparent;\\n      color: \", \";\\n\\n      i {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      &:disabled,\\n      &.disabled {\\n        &:hover,\\n        &:focus,\\n        &:active {\\n          color: \", \";\\n        }\\n      }\\n\\n      i:before {\\n        font-size: 16px;\\n      }\\n    }\\n  \"], [\"\\n    display: \", \";\\n    position: relative;\\n    width: \", \";\\n    background: none;\\n    letter-spacing: 0.2px;\\n    border: 1px solid transparent;\\n    font-size: \", \";\\n    line-height: \", \";\\n    text-decoration: none;\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: middle;\\n    user-select: none;\\n    transition: all 0.3s ease;\\n\\n    &:hover {\\n      text-decoration: none;\\n    }\\n\\n    &:focus {\\n      text-decoration: none;\\n      outline: 0;\\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n    }\\n\\n    &.focus {\\n      outline: 0;\\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n    }\\n\\n    &:not(:disabled):not(.disabled) {\\n      cursor: pointer;\\n    }\\n\\n    &.disabled,\\n    &:disabled {\\n      opacity: 0.65;\\n      color: \", \";\\n    }\\n\\n    &.icon {\\n      height: 32px;\\n      width: 32px;\\n      padding: 4px 8px;\\n      text-align: center;\\n      background-color: transparent;\\n      color: \", \";\\n\\n      i {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      &:disabled,\\n      &.disabled {\\n        &:hover,\\n        &:focus,\\n        &:active {\\n          color: \", \";\\n        }\\n      }\\n\\n      i:before {\\n        font-size: 16px;\\n      }\\n    }\\n  \"])), props.block ? 'block' : 'inline-block', props.block ? '100%' : 'auto', props.size === 'sm' ? '11px' : '13px', props.size === 'sm' ? '16px' : '20px', variables.colors.white, variables.colors.gray60, variables.colors.gray60);\n};\n\nvar templateObject_1;\nvar InvisibleText = styled('span')(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  visibility: hidden;\\n\"], [\"\\n  visibility: hidden;\\n\"])));\nvar templateObject_1$1;\n\nvar Button = function (_super) {\n  __extends(Button, _super);\n\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onClick = _this.onClick.bind(_this);\n    return _this;\n  }\n\n  Button.prototype.onClick = function (e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  Button.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        color = _a.color,\n        type = _a.type,\n        loading = _a.loading,\n        disabled = _a.disabled,\n        isIcon = _a.isIcon,\n        children = _a.children,\n        props = __rest(_a, [\"className\", \"color\", \"type\", \"loading\", \"disabled\", \"isIcon\", \"children\"]);\n\n    return createElement(ThemedComponent, {\n      color: color,\n      themes: themes.button\n    }, function (themeAttributes) {\n      return createElement(ButtonWrapper, _assign({\n        className: classnames(isIcon && 'icon', className),\n        type: type,\n        onClick: _this.onClick,\n        disabled: disabled || loading,\n        color: color,\n        isIcon: isIcon\n      }, props, themeAttributes), loading ? createElement(Fragment, null, createElement(LoaderCircle, {\n        className: classnames(color, className),\n        size: 30\n      }), createElement(InvisibleText, null, children)) : children);\n    });\n  };\n\n  Button.defaultProps = {\n    color: 'secondary',\n    type: 'button',\n    size: 'lg',\n    block: false,\n    active: false,\n    disabled: false,\n    outline: false\n  };\n  return Button;\n}(Component);\n\nvar LoaderCircle = styled(Circle)(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n  margin: -6px 0;\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -15px;\\n\\n  svg path,\\n  svg rect {\\n    fill: #fff /* $white */;\\n  }\\n\\n  .white {\\n    svg path,\\n    svg rect {\\n      fill: #484c4f /* $gray-70 */;\\n    }\\n  }\\n\"], [\"\\n  margin: -6px 0;\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -15px;\\n\\n  svg path,\\n  svg rect {\\n    fill: #fff /* $white */;\\n  }\\n\\n  .white {\\n    svg path,\\n    svg rect {\\n      fill: #484c4f /* $gray-70 */;\\n    }\\n  }\\n\"])));\nvar isIconStyles = css(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  \", \" {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n\\n    svg {\\n      width: 24px;\\n      height: 24px;\\n    }\\n\\n    svg path,\\n    svg rect {\\n      fill: \", \";\\n    }\\n  }\\n\"], [\"\\n  \", \" {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n\\n    svg {\\n      width: 24px;\\n      height: 24px;\\n    }\\n\\n    svg path,\\n    svg rect {\\n      fill: \", \";\\n    }\\n  }\\n\"])), LoaderCircle, variables.colors.kataBlue);\nvar ButtonWrapper = styled('button')(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  \", \";\\n  padding: \", \";\\n  height: \", \";\\n  font-weight: \", \";\\n  border-radius: 4px;\\n\\n  &:not(:disabled):not(.disabled) {\\n    color: \", \";\\n    border-color: \", \";\\n    background-color: \", \";\\n\\n    &:hover {\\n      color: \", \";\\n      border-color: \", \";\\n      background-color: \", \";\\n    }\\n\\n    &:active,\\n    &.active {\\n      color: \", \";\\n      border-color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background-color: \", \";\\n    border-color: \", \";\\n\\n    &:hover {\\n      background-color: \", \";\\n      border-color: \", \";\\n    }\\n  }\\n\\n  \", \";\\n\"], [\"\\n  \", \";\\n  padding: \", \";\\n  height: \", \";\\n  font-weight: \", \";\\n  border-radius: 4px;\\n\\n  &:not(:disabled):not(.disabled) {\\n    color: \", \";\\n    border-color: \", \";\\n    background-color: \", \";\\n\\n    &:hover {\\n      color: \", \";\\n      border-color: \", \";\\n      background-color: \", \";\\n    }\\n\\n    &:active,\\n    &.active {\\n      color: \", \";\\n      border-color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background-color: \", \";\\n    border-color: \", \";\\n\\n    &:hover {\\n      background-color: \", \";\\n      border-color: \", \";\\n    }\\n  }\\n\\n  \", \";\\n\"])), function (props) {\n  return ButtonBase(props);\n}, function (props) {\n  return props.size === 'sm' ? '8px 16px' : '10px 24px';\n}, function (props) {\n  return props.size === 'sm' ? '32px' : '40px';\n}, function (props) {\n  return props.size === 'sm' ? '700' : '500';\n}, function (props) {\n  return props.textColor;\n}, function (props) {\n  return props.borderColor;\n}, function (props) {\n  return props.isIcon ? 'transparent' : props.backgroundColor;\n}, function (props) {\n  return props.linkColorHover;\n}, function (props) {\n  return props.borderColorHover;\n}, function (props) {\n  return props.backgroundColorHover;\n}, function (props) {\n  return props.linkColorActive;\n}, function (props) {\n  return props.borderColorActive;\n}, function (props) {\n  return props.backgroundColorActive;\n}, function (props) {\n  return props.isIcon ? props.backgroundColorHover : '#c2c7c8';\n}, function (props) {\n  return props.isIcon ? 'transparent' : darken(0.1, '#c2c7c8');\n}, function (props) {\n  return props.isIcon ? props.backgroundColorHover : '#c2c7c8';\n}, function (props) {\n  return props.isIcon ? 'transparent' : darken(0.1, '#c2c7c8');\n}, function (props) {\n  return props.isIcon && isIconStyles;\n});\nvar templateObject_1$2, templateObject_2, templateObject_3;\n\nvar ButtonGroup = function (_super) {\n  __extends(ButtonGroup, _super);\n\n  function ButtonGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ButtonGroup.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        rest = __rest(_a, [\"children\"]);\n\n    return createElement(ThemedComponent, {\n      themes: themes.button\n    }, function (themeAttributes) {\n      return createElement(Root, _assign({}, rest, themeAttributes), children);\n    });\n  };\n\n  return ButtonGroup;\n}(Component);\n\nvar Root = styled('div')(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n  border-collapse: collapse;\\n\\n  button,\\n  a {\\n    border-radius: 0;\\n\\n    &:first-child {\\n      border-top-left-radius: 4px;\\n      border-bottom-left-radius: 4px;\\n    }\\n\\n    &:last-child {\\n      border-top-right-radius: 4px;\\n      border-bottom-right-radius: 4px;\\n    }\\n  }\\n\"], [\"\\n  border-collapse: collapse;\\n\\n  button,\\n  a {\\n    border-radius: 0;\\n\\n    &:first-child {\\n      border-top-left-radius: 4px;\\n      border-bottom-left-radius: 4px;\\n    }\\n\\n    &:last-child {\\n      border-top-right-radius: 4px;\\n      border-bottom-right-radius: 4px;\\n    }\\n  }\\n\"])));\nvar templateObject_1$3;\n\nvar FloatingButton = function (_super) {\n  __extends(FloatingButton, _super);\n\n  function FloatingButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onClick = _this.onClick.bind(_this);\n    return _this;\n  }\n\n  FloatingButton.prototype.onClick = function (e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  FloatingButton.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        icon = _a.icon,\n        size = _a.size,\n        color = _a.color,\n        type = _a.type,\n        active = _a.active,\n        disabled = _a.disabled,\n        isLoading = _a.isLoading,\n        props = __rest(_a, [\"className\", \"icon\", \"size\", \"color\", \"type\", \"active\", \"disabled\", \"isLoading\"]);\n\n    var classes = classnames(color, active, className);\n    return createElement(ThemedComponent, {\n      themes: themes.button\n    }, function (themeAttributes) {\n      return createElement(FloatingButtonWrapper, _assign({\n        type: type,\n        className: classes,\n        onClick: _this.onClick,\n        disabled: disabled\n      }, props, themeAttributes), isLoading ? createElement(Fragment, null, createElement(LoaderCircle$1, {\n        size: 40\n      })) : createElement(\"i\", {\n        className: \"icon-\" + icon\n      }));\n    });\n  };\n\n  FloatingButton.defaultProps = {\n    color: 'primary',\n    type: 'button',\n    active: false,\n    disabled: false\n  };\n  return FloatingButton;\n}(Component);\n\nvar popIn = keyframes(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n  from {\\n    transform: scale(0);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n\"], [\"\\n  from {\\n    transform: scale(0);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n\"])));\nvar _a = variables.transitions,\n    transitionFast = _a.transitionFast,\n    transitionEasing = _a.transitionEasing;\nvar FloatingButtonWrapper = styled('button')(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"\\n  \", \" height: 40px;\\n  width: 40px;\\n  font-weight: 500;\\n  border-radius: 50%;\\n  line-height: 1;\\n  box-shadow: \", \";\\n  font-size: 16px;\\n  vertical-align: middle;\\n  color: \", \";\\n  background-color: \", \";\\n  align-items: center;\\n  justify-content: center;\\n  position: relative;\\n\\n  animation: \", \" \", \" \", \";\\n\\n  &:focus {\\n    box-shadow: \", \";\\n  }\\n\\n  &.focus {\\n    box-shadow: \", \";\\n  }\\n\\n  &.corner-right {\\n    position: absolute;\\n    top: -16px;\\n    right: -16px;\\n  }\\n\\n  i::before {\\n    vertical-align: middle;\\n  }\\n\\n  &.primary {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.success {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.danger {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.warning {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background-color: \", \";\\n    color: \", \";\\n\\n    &:hover {\\n      color: \", \";\\n    }\\n  }\\n\"], [\"\\n  \", \" height: 40px;\\n  width: 40px;\\n  font-weight: 500;\\n  border-radius: 50%;\\n  line-height: 1;\\n  box-shadow: \", \";\\n  font-size: 16px;\\n  vertical-align: middle;\\n  color: \", \";\\n  background-color: \", \";\\n  align-items: center;\\n  justify-content: center;\\n  position: relative;\\n\\n  animation: \", \" \", \" \", \";\\n\\n  &:focus {\\n    box-shadow: \", \";\\n  }\\n\\n  &.focus {\\n    box-shadow: \", \";\\n  }\\n\\n  &.corner-right {\\n    position: absolute;\\n    top: -16px;\\n    right: -16px;\\n  }\\n\\n  i::before {\\n    vertical-align: middle;\\n  }\\n\\n  &.primary {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.success {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.danger {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &.warning {\\n    &:hover,\\n    &:active {\\n      color: \", \";\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background-color: \", \";\\n    color: \", \";\\n\\n    &:hover {\\n      color: \", \";\\n    }\\n  }\\n\"])), ButtonBase, variables.layerShadows.layer200Shadow, variables.colors.gray60, variables.colors.white, popIn, transitionFast, transitionEasing, variables.layerShadows.layer200Shadow, variables.layerShadows.layer200Shadow, variables.colors.kataBlue, variables.colors.green, variables.colors.red, variables.colors.yellow, variables.colors.gray10, variables.colors.gray60, variables.colors.gray60);\nvar LoaderCircle$1 = styled(Circle)(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([\"\\n  position: absolute;\\n  top: 0;\\n  left: -1px;\\n\"], [\"\\n  position: absolute;\\n  top: 0;\\n  left: -1px;\\n\"])));\nvar templateObject_1$4, templateObject_2$1, templateObject_3$1;\n\nvar SupportButton = function (_super) {\n  __extends(SupportButton, _super);\n\n  function SupportButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onClick = _this.onClick.bind(_this);\n    return _this;\n  }\n\n  SupportButton.prototype.onClick = function (e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  SupportButton.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        size = _a.size,\n        block = _a.block,\n        active = _a.active,\n        disabled = _a.disabled,\n        isIcon = _a.isIcon,\n        outline = _a.outline,\n        loading = _a.loading,\n        props = __rest(_a, [\"className\", \"size\", \"block\", \"active\", \"disabled\", \"isIcon\", \"outline\", \"loading\"]);\n\n    var classes = classnames(size ? \"btn-\" + size : false, block ? \"btn-block\" : false, {\n      active: active,\n      icon: isIcon\n    }, className);\n    return createElement(ThemedComponent, {\n      themes: themes.button\n    }, function (themeAttributes) {\n      return createElement(SupportButtonWrapper, _assign({\n        type: \"button\",\n        className: classes,\n        onClick: _this.onClick,\n        disabled: disabled,\n        loading: loading\n      }, props, themeAttributes), loading ? createElement(Fragment, null, createElement(LoaderCircle$2, {\n        \"data-testid\": \"SupportButton-loaderCircle\",\n        size: 30\n      }), createElement(InvisibleText$1, null, _this.props.children)) : _this.props.children);\n    });\n  };\n\n  SupportButton.defaultProps = {\n    block: false,\n    active: false,\n    disabled: false,\n    outline: false\n  };\n  return SupportButton;\n}(Component);\n\nvar LoaderCircle$2 = styled(Circle)(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -16px;\\n  margin-top: -8px;\\n\"], [\"\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -16px;\\n  margin-top: -8px;\\n\"])));\nvar InvisibleText$1 = styled('span')(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([\"\\n  visibility: hidden;\\n\"], [\"\\n  visibility: hidden;\\n\"])));\nvar SupportButtonWrapper = styled('button')(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([\"\\n  \", \" padding: 8px 16px;\\n  border-radius: 4px;\\n  font-weight: 700;\\n  font-size: 11px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: #fff;\\n  position: \", \";\\n\\n  &:hover {\\n    background-color: \", \";\\n    color: \", \";\\n  }\\n\\n  &:focus {\\n    box-shadow: unset;\\n\\n    color: \", \";\\n    background-color: \", \";\\n\\n    \", \" {\\n      svg path,\\n      svg rect {\\n        fill: \", \";\\n      }\\n    }\\n  }\\n\\n  &.icon {\\n    height: 32px;\\n    width: 32px;\\n    padding: 8px;\\n    text-align: center;\\n    background: none;\\n    color: $gray-60;\\n\\n    i:before {\\n      font-size: 16px;\\n    }\\n  }\\n\"], [\"\\n  \", \" padding: 8px 16px;\\n  border-radius: 4px;\\n  font-weight: 700;\\n  font-size: 11px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: #fff;\\n  position: \", \";\\n\\n  &:hover {\\n    background-color: \", \";\\n    color: \", \";\\n  }\\n\\n  &:focus {\\n    box-shadow: unset;\\n\\n    color: \", \";\\n    background-color: \", \";\\n\\n    \", \" {\\n      svg path,\\n      svg rect {\\n        fill: \", \";\\n      }\\n    }\\n  }\\n\\n  &.icon {\\n    height: 32px;\\n    width: 32px;\\n    padding: 8px;\\n    text-align: center;\\n    background: none;\\n    color: $gray-60;\\n\\n    i:before {\\n      font-size: 16px;\\n    }\\n  }\\n\"])), ButtonBase, variables.colors.gray50, variables.colors.gray30, function (props) {\n  return props.loading ? 'relative !important' : 'inherit';\n}, variables.colors.gray10, variables.colors.gray50, variables.colors.white, variables.colors.gray70, LoaderCircle$2, variables.colors.white);\nvar templateObject_1$5, templateObject_2$2, templateObject_3$2;\n\nvar ToggleButton = function (_super) {\n  __extends(ToggleButton, _super);\n\n  function ToggleButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      active: _this.props.active || false\n    };\n    _this.handleToggle = _this.handleToggle.bind(_this);\n    _this.renderState = _this.renderState.bind(_this);\n    return _this;\n  }\n\n  ToggleButton.prototype.handleToggle = function () {\n    var _this = this;\n\n    this.setState(function (state) {\n      return {\n        active: !state.active\n      };\n    }, function () {\n      if (_this.props.onToggle) {\n        _this.props.onToggle(_this.state.active);\n      }\n    });\n  };\n\n  ToggleButton.prototype.render = function () {\n    var _this = this;\n\n    return createElement(ThemedComponent, {\n      themes: themes.button\n    }, function (themeAttributes) {\n      return createElement(Root$1, _assign({\n        className: \"kata-toggle-button\",\n        onClick: _this.handleToggle\n      }, themeAttributes), _this.renderState());\n    });\n  };\n\n  ToggleButton.prototype.renderState = function () {\n    if (this.state.active) {\n      return this.props.renderActive();\n    }\n\n    return this.props.renderInactive();\n  };\n\n  return ToggleButton;\n}(Component);\n\nvar Root$1 = styled('div')(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\"], [\"\"])));\nvar templateObject_1$6;\n\nvar HollowButton = function (_super) {\n  __extends(HollowButton, _super);\n\n  function HollowButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onClick = function (e) {\n      if (_this.props.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(e);\n      }\n    };\n\n    return _this;\n  }\n\n  HollowButton.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        size = _a.size,\n        block = _a.block,\n        disabled = _a.disabled,\n        loading = _a.loading,\n        props = __rest(_a, [\"className\", \"size\", \"block\", \"disabled\", \"loading\"]);\n\n    var classes = classnames(className);\n    return React__default.createElement(HollowButtonWrapper, _assign({\n      type: \"button\"\n    }, props, {\n      className: classes,\n      onClick: this.onClick,\n      disabled: disabled || loading\n    }), loading ? React__default.createElement(Fragment, null, React__default.createElement(LoaderCircle$3, {\n      size: 30\n    }), React__default.createElement(InvisibleText, null, this.props.children)) : this.props.children);\n  };\n\n  HollowButton.defaultProps = {\n    block: false,\n    active: false,\n    disabled: false,\n    outline: false\n  };\n  return HollowButton;\n}(React__default.Component);\n\nvar HollowButtonWrapper = styled('button')(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\\n  \", \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: \", \";\\n  height: \", \";\\n  border-radius: 6px;\\n  font-weight: 700;\\n  font-size: 13px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: #fff;\\n\\n  &:disabled,\\n  &.disabled {\\n    color: \", \";\\n  }\\n\\n  &:not(:disabled):not(.disabled) {\\n    &:hover {\\n      background-color: \", \";\\n      color: \", \";\\n    }\\n\\n    &:focus {\\n      box-shadow: unset;\\n\\n      color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  i::before {\\n    height: unset;\\n    line-height: unset;\\n  }\\n\"], [\"\\n  \", \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: \", \";\\n  height: \", \";\\n  border-radius: 6px;\\n  font-weight: 700;\\n  font-size: 13px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: #fff;\\n\\n  &:disabled,\\n  &.disabled {\\n    color: \", \";\\n  }\\n\\n  &:not(:disabled):not(.disabled) {\\n    &:hover {\\n      background-color: \", \";\\n      color: \", \";\\n    }\\n\\n    &:focus {\\n      box-shadow: unset;\\n\\n      color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  i::before {\\n    height: unset;\\n    line-height: unset;\\n  }\\n\"])), ButtonBase, function (props) {\n  return props.size === 'sm' ? '8px 16px' : '10px 24px';\n}, function (props) {\n  return props.size === 'sm' ? '32px' : '40px';\n}, variables.colors.gray70, variables.colors.gray30, variables.colors.gray50, variables.colors.gray10, variables.colors.gray70, variables.colors.white, variables.colors.gray70);\nvar LoaderCircle$3 = styled(Circle)(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([\"\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -16px;\\n\"], [\"\\n  position: absolute;\\n  left: 50%;\\n  margin-left: -16px;\\n\"])));\nvar templateObject_1$7, templateObject_2$3;\n\nvar IconicButton = function (_super) {\n  __extends(IconicButton, _super);\n\n  function IconicButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onClick = function (e) {\n      if (_this.props.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(e);\n      }\n    };\n\n    return _this;\n  }\n\n  IconicButton.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        size = _a.size,\n        block = _a.block,\n        disabled = _a.disabled,\n        loading = _a.loading,\n        variant = _a.variant,\n        props = __rest(_a, [\"className\", \"size\", \"block\", \"disabled\", \"loading\", \"variant\"]);\n\n    var classes = classnames(variant, className);\n    return React__default.createElement(IconicButtonWrapper, _assign({\n      type: \"button\"\n    }, props, {\n      className: classes,\n      onClick: this.onClick,\n      disabled: disabled\n    }), loading ? React__default.createElement(Fragment, null, React__default.createElement(\"span\", {\n      className: \"invisible\"\n    }, this.props.children)) : this.props.children);\n  };\n\n  IconicButton.defaultProps = {\n    block: false,\n    active: false,\n    disabled: false,\n    outline: false,\n    size: 'md',\n    variant: 'default'\n  };\n  return IconicButton;\n}(React__default.Component);\n\nvar IconicButtonWrapper = styled('button')(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\\n  \", \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: \", \";\\n  height: \", \";\\n  border-radius: 6px;\\n  font-weight: 700;\\n  font-size: 13px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: \", \";\\n\\n  &.primary {\\n    color: \", \";\\n\\n    &:not(:disabled):not(.disabled) {\\n      &:hover {\\n        color: \", \";\\n      }\\n\\n      &:focus {\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n    }\\n  }\\n\\n  &.danger {\\n    color: \", \";\\n\\n    &:not(:disabled):not(.disabled) {\\n      &:hover {\\n        color: \", \";\\n      }\\n\\n      &:focus {\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background: \", \";\\n    color: \", \";\\n  }\\n\\n  &:not(:disabled):not(.disabled) {\\n    &:hover {\\n      background-color: \", \";\\n      color: \", \";\\n    }\\n\\n    &:focus {\\n      box-shadow: unset;\\n\\n      color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  i::before {\\n    height: unset;\\n    line-height: unset;\\n  }\\n\"], [\"\\n  \", \"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: \", \";\\n  height: \", \";\\n  border-radius: 6px;\\n  font-weight: 700;\\n  font-size: 13px;\\n  line-height: 1.45;\\n\\n  color: \", \";\\n  border: 1px solid \", \";\\n  background: \", \";\\n\\n  &.primary {\\n    color: \", \";\\n\\n    &:not(:disabled):not(.disabled) {\\n      &:hover {\\n        color: \", \";\\n      }\\n\\n      &:focus {\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n    }\\n  }\\n\\n  &.danger {\\n    color: \", \";\\n\\n    &:not(:disabled):not(.disabled) {\\n      &:hover {\\n        color: \", \";\\n      }\\n\\n      &:focus {\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n    }\\n  }\\n\\n  &:disabled,\\n  &.disabled {\\n    background: \", \";\\n    color: \", \";\\n  }\\n\\n  &:not(:disabled):not(.disabled) {\\n    &:hover {\\n      background-color: \", \";\\n      color: \", \";\\n    }\\n\\n    &:focus {\\n      box-shadow: unset;\\n\\n      color: \", \";\\n      background-color: \", \";\\n    }\\n  }\\n\\n  i::before {\\n    height: unset;\\n    line-height: unset;\\n  }\\n\"])), ButtonBase, function (props) {\n  return props.size === 'sm' ? '8px 16px' : '10px 24px';\n}, function (props) {\n  return props.size === 'sm' ? '32px' : '40px';\n}, variables.colors.gray70, variables.colors.gray30, variables.colors.white, variables.colors.kataBlue, variables.colors.darkKataBlue, variables.colors.white, variables.colors.gray70, variables.colors.red, darken(0.15, variables.colors.red), variables.colors.white, variables.colors.gray70, variables.colors.gray10, variables.colors.gray50, variables.colors.gray10, variables.colors.gray70, variables.colors.white, variables.colors.gray70);\nvar templateObject_1$8;\nexport { Button, ButtonWrapper, ButtonGroup, FloatingButton, SupportButton, ToggleButton, HollowButton, IconicButton, ButtonBase };","map":null,"metadata":{},"sourceType":"module"}