{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\src\\\\boot.tsx\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as serviceWorker from './utils/serviceWorker';\nimport { configureStore } from './stores'; // Load initial state from window object, else use undefined\n\nvar initialState = window.__INITIAL_REDUX_STATE__ || undefined;\n\nvar _configureStore = configureStore(initialState),\n    store = _configureStore.store,\n    history = _configureStore.history;\n\nexport function render() {\n  return _render.apply(this, arguments);\n}\n\nfunction _render() {\n  _render = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _ref, Main;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('./Main');\n\n          case 2:\n            _ref = _context.sent;\n            Main = _ref.Main;\n            ReactDOM.render(React.createElement(Main, {\n              store: store,\n              history: history,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 13\n              },\n              __self: this\n            }), document.getElementById('root'));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _render.apply(this, arguments);\n}\n\nexport function start() {\n  return _start.apply(this, arguments);\n}\n\nfunction _start() {\n  _start = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return render();\n\n          case 2:\n            if (module.hot) {\n              module.hot.accept('./Main', render);\n            } // If you want your app to work offline and load faster, you can change\n            // unregister() to register() below. Note this comes with some pitfalls.\n            // Learn more about service workers: http://bit.ly/CRA-PWA\n\n\n            serviceWorker.unregister();\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _start.apply(this, arguments);\n}","map":{"version":3,"sources":["E:\\IzzanNurdin\\Job\\Tests\\Kata\\jr-fe-test\\src\\boot.tsx"],"names":["React","ReactDOM","serviceWorker","configureStore","initialState","window","__INITIAL_REDUX_STATE__","undefined","store","history","render","Main","document","getElementById","start","module","hot","accept","unregister"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAEA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,IAAMC,YAAY,GAAGC,MAAM,CAACC,uBAAP,IAAkCC,SAAvD;;sBAC2BJ,cAAc,CAACC,YAAD,C;IAAjCI,K,mBAAAA,K;IAAOC,O,mBAAAA,O;;AAEf,gBAAsBC,MAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkB,OAAO,QAAP,CADlB;;AAAA;AAAA;AACGC,YAAAA,IADH,QACGA,IADH;AAELV,YAAAA,QAAQ,CAACS,MAAT,CAAgB,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEF,KAAb;AAAoB,cAAA,OAAO,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB,EAA0DG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1D;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,KAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCJ,MAAM,EADP;;AAAA;AAGL,gBAAIK,MAAM,CAACC,GAAX,EAAgB;AACdD,cAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,QAAlB,EAA4BP,MAA5B;AACD,aALI,CAOL;AACA;AACA;;;AACAR,YAAAA,aAAa,CAACgB,UAAd;;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './utils/serviceWorker';\r\nimport { configureStore } from './stores';\r\n\r\n// Load initial state from window object, else use undefined\r\nconst initialState = window.__INITIAL_REDUX_STATE__ || undefined;\r\nconst { store, history } = configureStore(initialState);\r\n\r\nexport async function render() {\r\n  const { Main } = await import('./Main');\r\n  ReactDOM.render(<Main store={store} history={history} />, document.getElementById('root'));\r\n}\r\n\r\nexport async function start() {\r\n  await render();\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./Main', render);\r\n  }\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.unregister();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}