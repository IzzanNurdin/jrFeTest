{"ast":null,"code":"import _taggedTemplateLiteral from \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"E:\\\\IzzanNurdin\\\\Job\\\\Tests\\\\Kata\\\\jr-fe-test\\\\src\\\\components\\\\Skeleton\\\\Skeleton.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \" {\\n    margin-bottom: \", \";\\n\\n    &:last-child {\\n      width: 65%;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  position: relative;\\n  overflow: hidden;\\n  height: 20px;\\n  width: 100%;\\n  background: \", \";\\n  border-radius: 4px;\\n\\n  &.is-small {\\n    height: 16px !important;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport styled from \"styled-components\";\nimport { variables } from \"@kata-kit/theme\";\nexport var Skeleton = function Skeleton(_ref) {\n  var className = _ref.className,\n      numberOfLines = _ref.numberOfLines,\n      small = _ref.small;\n\n  if (numberOfLines && numberOfLines > 1) {\n    return React.createElement(Multiline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, _toConsumableArray(Array(numberOfLines)).map(function (_, i) {\n      return React.createElement(Wrapper, {\n        key: i,\n        className: classnames(className, small && \"is-small\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }));\n  }\n\n  return React.createElement(Wrapper, {\n    className: classnames(className, small && \"is-small\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\nSkeleton.defaultProps = {\n  numberOfLines: 1\n};\nvar Wrapper = styled(\"div\")(_templateObject(), variables.colors.gray20);\nvar Multiline = styled(\"div\")(_templateObject2(), Wrapper, variables.spaces.space1);","map":{"version":3,"sources":["E:\\IzzanNurdin\\Job\\Tests\\Kata\\jr-fe-test\\src\\components\\Skeleton\\Skeleton.tsx"],"names":["React","classnames","styled","variables","Skeleton","className","numberOfLines","small","Array","map","_","i","defaultProps","Wrapper","colors","gray20","Multiline","spaces","space1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAkC,mBAAlC;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AASA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAI3C;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAID,aAAa,IAAIA,aAAa,GAAG,CAArC,EAAwC;AACtC,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,mBAAIE,KAAK,CAACF,aAAD,CAAT,EAA0BG,GAA1B,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAC7B,oBAAC,OAAD;AACE,QAAA,GAAG,EAAEA,CADP;AAEE,QAAA,SAAS,EAAEV,UAAU,CAACI,SAAD,EAAYE,KAAK,IAAI,UAArB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD6B;AAAA,KAA9B,CADH,CADF;AAUD;;AAED,SAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEN,UAAU,CAACI,SAAD,EAAYE,KAAK,IAAI,UAArB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnBM;AAqBPH,QAAQ,CAACQ,YAAT,GAAwB;AACtBN,EAAAA,aAAa,EAAE;AADO,CAAxB;AAIA,IAAMO,OAAO,GAAGX,MAAM,CAAC,KAAD,CAAT,oBAMGC,SAAS,CAACW,MAAV,CAAiBC,MANpB,CAAb;AAcA,IAAMC,SAAS,GAAGd,MAAM,CAAC,KAAD,CAAT,qBACXW,OADW,EAEMV,SAAS,CAACc,MAAV,CAAiBC,MAFvB,CAAf","sourcesContent":["import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport { variables } from \"@kata-kit/theme\";\r\n\r\ninterface SkeletonProps {\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  numberOfLines?: number;\r\n  small?: boolean;\r\n}\r\n\r\nexport const Skeleton: React.FC<SkeletonProps> = ({\r\n  className,\r\n  numberOfLines,\r\n  small\r\n}) => {\r\n  if (numberOfLines && numberOfLines > 1) {\r\n    return (\r\n      <Multiline>\r\n        {[...Array(numberOfLines)].map((_, i) => (\r\n          <Wrapper\r\n            key={i}\r\n            className={classnames(className, small && \"is-small\")}\r\n          />\r\n        ))}\r\n      </Multiline>\r\n    );\r\n  }\r\n\r\n  return <Wrapper className={classnames(className, small && \"is-small\")} />;\r\n};\r\n\r\nSkeleton.defaultProps = {\r\n  numberOfLines: 1\r\n};\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 20px;\r\n  width: 100%;\r\n  background: ${variables.colors.gray20};\r\n  border-radius: 4px;\r\n\r\n  &.is-small {\r\n    height: 16px !important;\r\n  }\r\n`;\r\n\r\nconst Multiline = styled(\"div\")`\r\n  ${Wrapper} {\r\n    margin-bottom: ${variables.spaces.space1};\r\n\r\n    &:last-child {\r\n      width: 65%;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}