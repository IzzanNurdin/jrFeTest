{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { buildRootReducer } from \"./reducers\";\nimport { rootSaga } from \"./sagas\";\nvar history = createBrowserHistory();\nvar composeEnhancers = composeWithDevTools({});\nexport function configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(buildRootReducer(history), initialState, composeEnhancers(applyMiddleware(sagaMiddleware), applyMiddleware(routerMiddleware(history))));\n  store.dispatch({\n    routes: \"ko\",\n    heroes: \"ok\"\n  });\n  var sagaTask = sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", function () {\n      var nextReducer = require(\"./reducers\").default;\n\n      store.replaceReducer(nextReducer);\n    });\n    module.hot.accept(\"./sagas\", function () {\n      var nextSagas = require(\"./sagas\").default;\n\n      sagaTask.cancel();\n      sagaTask.done.then(function () {\n        sagaTask = sagaMiddleware.run(nextSagas);\n      });\n    });\n  }\n\n  return {\n    store: store,\n    history: history\n  };\n}","map":{"version":3,"sources":["E:\\IzzanNurdin\\Job\\Tests\\Kata\\jr-fe-test\\src\\stores\\index.ts"],"names":["createStore","applyMiddleware","routerMiddleware","composeWithDevTools","createSagaMiddleware","createBrowserHistory","buildRootReducer","rootSaga","history","composeEnhancers","configureStore","initialState","sagaMiddleware","store","dispatch","routes","heroes","sagaTask","run","module","hot","accept","nextReducer","require","default","replaceReducer","nextSagas","cancel","done","then"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,IAAMC,OAAO,GAAGH,oBAAoB,EAApC;AAEA,IAAMI,gBAAgB,GAAGN,mBAAmB,CAAC,EAAD,CAA5C;AAEA,OAAO,SAASO,cAAT,CAAwBC,YAAxB,EAA4C;AACjD,MAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AAEA,MAAMS,KAAK,GAAGb,WAAW,CACvBM,gBAAgB,CAACE,OAAD,CADO,EAEvBG,YAFuB,EAGvBF,gBAAgB,CACdR,eAAe,CAACW,cAAD,CADD,EAEdX,eAAe,CAACC,gBAAgB,CAACM,OAAD,CAAjB,CAFD,CAHO,CAAzB;AASAK,EAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,IAAAA,MAAM,EAAE,IADK;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAf;AAKA,MAAIC,QAAQ,GAAGL,cAAc,CAACM,GAAf,CAAmBX,QAAnB,CAAf;;AAEA,MAAIY,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpC,UAAMC,WAAW,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA1C;;AACAX,MAAAA,KAAK,CAACY,cAAN,CAAqBH,WAArB;AACD,KAHD;AAKAH,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,SAAlB,EAA6B,YAAM;AACjC,UAAMK,SAAS,GAAGH,OAAO,CAAC,SAAD,CAAP,CAAmBC,OAArC;;AACAP,MAAAA,QAAQ,CAACU,MAAT;AACAV,MAAAA,QAAQ,CAACW,IAAT,CAAcC,IAAd,CAAmB,YAAM;AACvBZ,QAAAA,QAAQ,GAAGL,cAAc,CAACM,GAAf,CAAmBQ,SAAnB,CAAX;AACD,OAFD;AAGD,KAND;AAOD;;AAED,SAAO;AAAEb,IAAAA,KAAK,EAALA,KAAF;AAASL,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { buildRootReducer } from \"./reducers\";\r\nimport { rootSaga } from \"./sagas\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nexport function configureStore(initialState?: any) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    buildRootReducer(history),\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware),\r\n      applyMiddleware(routerMiddleware(history))\r\n    )\r\n  );\r\n\r\n  store.dispatch({\r\n    routes: \"ko\",\r\n    heroes: \"ok\"\r\n  });\r\n\r\n  let sagaTask = sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"./reducers\", () => {\r\n      const nextReducer = require(\"./reducers\").default;\r\n      store.replaceReducer(nextReducer);\r\n    });\r\n\r\n    module.hot.accept(\"./sagas\", () => {\r\n      const nextSagas = require(\"./sagas\").default;\r\n      sagaTask.cancel();\r\n      sagaTask.done.then(() => {\r\n        sagaTask = sagaMiddleware.run(nextSagas);\r\n      });\r\n    });\r\n  }\r\n\r\n  return { store, history };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}