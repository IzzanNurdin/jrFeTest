{"ast":null,"code":"import { createElement, Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport ThemedComponent, { variables } from '@kata-kit/theme';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n\nvar defaultTheme = {\n  backgroundColor: variables.colors.gray10,\n  textColor: variables.colors.gray80,\n  borderColor: variables.colors.gray30\n};\nvar themes = {\n  defaultTheme: defaultTheme\n};\n\nvar styles = function styles(props) {\n  return css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    display: inline-block;\\n    position: relative;\\n    width: \", \"px;\\n    height: \", \"px;\\n    border: 1px solid \", \";\\n    border-radius: 50%;\\n    background: \", \";\\n    font-size: 1rem;\\n    line-height: 1;\\n    vertical-align: middle;\\n    overflow: hidden;\\n\\n    img {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      object-fit: cover;\\n    }\\n  \"], [\"\\n    display: inline-block;\\n    position: relative;\\n    width: \", \"px;\\n    height: \", \"px;\\n    border: 1px solid \", \";\\n    border-radius: 50%;\\n    background: \", \";\\n    font-size: 1rem;\\n    line-height: 1;\\n    vertical-align: middle;\\n    overflow: hidden;\\n\\n    img {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      object-fit: cover;\\n    }\\n  \"])), props.size, props.size, props.theme.borderColor, props.theme.backgroundColor);\n};\n\nvar templateObject_1;\n\nvar Avatar = function (_super) {\n  __extends(Avatar, _super);\n\n  function Avatar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Avatar.prototype.render = function () {\n    var _a = this.props,\n        src = _a.src,\n        size = _a.size,\n        className = _a.className,\n        style = _a.style;\n    return createElement(ThemedComponent, {\n      themes: themes\n    }, function (themeAttributes) {\n      return createElement(Root, {\n        className: className,\n        style: style,\n        theme: themeAttributes,\n        size: size\n      }, createElement(Image, {\n        src: src\n      }));\n    });\n  };\n\n  Avatar.defaultProps = {\n    size: 40\n  };\n  return Avatar;\n}(Component);\n\nvar Image = styled('img')(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\"], [\"\"])));\nvar Root = styled('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  \", \";\\n\"], [\"\\n  \", \";\\n\"])), styles);\nvar templateObject_1$1, templateObject_2;\nexport { Avatar };","map":null,"metadata":{},"sourceType":"module"}