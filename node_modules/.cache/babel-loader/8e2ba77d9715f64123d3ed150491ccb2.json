{"ast":null,"code":"// This file holds our state type, as well as any other types related to this Redux store.\n// Use enums for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport var HeroesActionTypes;\n\n(function (HeroesActionTypes) {\n  HeroesActionTypes[\"FETCH_REQUEST\"] = \"@@heroes/FETCH_REQUEST\";\n  HeroesActionTypes[\"FETCH_SUCCESS\"] = \"@@heroes/FETCH_SUCCESS\";\n  HeroesActionTypes[\"FETCH_ERROR\"] = \"@@heroes/FETCH_ERROR\";\n  HeroesActionTypes[\"SELECT_HERO\"] = \"@@heroes/SELECT_HERO\";\n  HeroesActionTypes[\"SELECTED\"] = \"@@heroes/SELECTED\";\n})(HeroesActionTypes || (HeroesActionTypes = {}));","map":{"version":3,"sources":["E:\\IzzanNurdin\\Job\\Tests\\Kata\\jr-fe-test\\src\\stores\\heroes\\types.ts"],"names":["HeroesActionTypes"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB","sourcesContent":["// This file holds our state type, as well as any other types related to this Redux store.\r\n\r\n// Use enums for better autocompletion of action type names. These will\r\n// be compiled away leaving only the final value in your compiled code.\r\n//\r\n// Define however naming conventions you'd like for your action types, but\r\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\r\n// of Redux's `@@INIT` action.\r\nexport enum HeroesActionTypes {\r\n  FETCH_REQUEST = '@@heroes/FETCH_REQUEST',\r\n  FETCH_SUCCESS = '@@heroes/FETCH_SUCCESS',\r\n  FETCH_ERROR = '@@heroes/FETCH_ERROR',\r\n  SELECT_HERO = '@@heroes/SELECT_HERO',\r\n  SELECTED = '@@heroes/SELECTED'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}