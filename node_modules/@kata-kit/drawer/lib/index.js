'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var reactDom = require('react-dom');
var common = require('@kata-kit/common');
var Scrollbars = _interopDefault(require('react-custom-scrollbars'));
var classnames = _interopDefault(require('classnames'));
var button = require('@kata-kit/button');
var React = require('react');
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
var theme = require('@kata-kit/theme');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var DrawerContext = React.createContext({});

var drawerBoxShadow = '0 4px 6px 2px rgba(0, 0, 0, 0.15)';
var DrawerBase = function (props) {
    return styled.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    min-height: 1px;\n    width: 480px;\n    padding-bottom: 170px;\n    z-index: 1035;\n    box-shadow: ", ";\n    background-color: ", ";\n    color: ", ";\n    transition: all 0.5s cubic-bezier(0.15, 1, 0.3, 1);\n\n    &.is-open {\n      visibility: visible;\n    }\n\n    &.is-closed {\n      visibility: hidden;\n      transform: translateX(100%);\n    }\n  "], ["\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    min-height: 1px;\n    width: 480px;\n    padding-bottom: 170px;\n    z-index: 1035;\n    box-shadow: ", ";\n    background-color: ", ";\n    color: ", ";\n    transition: all 0.5s cubic-bezier(0.15, 1, 0.3, 1);\n\n    &.is-open {\n      visibility: visible;\n    }\n\n    &.is-closed {\n      visibility: hidden;\n      transform: translateX(100%);\n    }\n  "])), drawerBoxShadow, props.theme.backgroundColor, props.theme.textColor);
};
var DrawerRight = styled.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  left: auto;\n  right: 0;\n  border-right: none;\n  box-shadow: ", ";\n\n  &.fold {\n    margin-left: 0;\n  }\n\n  &.folding {\n    transition-property: margin-right;\n  }\n"], ["\n  left: auto;\n  right: 0;\n  border-right: none;\n  box-shadow: ", ";\n\n  &.fold {\n    margin-left: 0;\n  }\n\n  &.folding {\n    transition-property: margin-right;\n  }\n"])), drawerBoxShadow);
var DrawerOverlayStyles = styled.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  &.is-open {\n    position: fixed;\n    z-index: 1000;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.65);\n  }\n"], ["\n  &.is-open {\n    position: fixed;\n    z-index: 1000;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.65);\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3;

var theme$1 = {
    backgroundColor: theme.variables.colors.white,
    textColor: theme.variables.colors.gray80,
    borderColor: theme.variables.colors.gray30
};

var Drawer = (function (_super) {
    __extends(Drawer, _super);
    function Drawer(props) {
        var _this = _super.call(this, props) || this;
        _this.el = document.createElement('div');
        _this.state = {
            isOpen: props.isOpen,
            overflow: false
        };
        _this.watchOverflow = _this.watchOverflow.bind(_this);
        _this.onCloseDrawer = _this.onCloseDrawer.bind(_this);
        _this.handleKeyDown = _this.handleKeyDown.bind(_this);
        return _this;
    }
    Drawer.getDerivedStateFromProps = function (props, state) {
        return {
            isOpen: props.isOpen
        };
    };
    Drawer.prototype.componentDidMount = function () {
        document.body.appendChild(this.el);
    };
    Drawer.prototype.componentWillUnmount = function () {
        this.reset();
        document.body.removeChild(this.el);
    };
    Drawer.prototype.componentDidUpdate = function (prev) {
        if (prev.isOpen !== this.props.isOpen) {
            if (this.props.isOpen) {
                document.body.classList.add('noscroll');
            }
            else {
                document.body.classList.remove('noscroll');
            }
        }
    };
    Drawer.prototype.reset = function () {
        try {
            document.body.classList.remove('noscroll');
            this.watchOverflow(0);
        }
        catch (err) {
        }
    };
    Drawer.prototype.handleKeyDown = function (event) {
        if (event.key === 'Escape') {
            this.onCloseDrawer();
        }
    };
    Drawer.prototype.onCloseDrawer = function () {
        this.props.onClose();
    };
    Drawer.prototype.watchOverflow = function (position) {
        if (position > 0.05) {
            this.setState({ overflow: true });
        }
        else {
            this.setState({ overflow: false });
        }
    };
    Drawer.prototype.getContextAPI = function () {
        return {
            overflow: this.state.overflow,
            labelledById: this.props.labelledById,
            watchOverflow: this.watchOverflow,
            onClose: this.onCloseDrawer
        };
    };
    Drawer.prototype.render = function () {
        var _this = this;
        var wrapper = (React.createElement(React.Fragment, null,
            this.props.backdrop && (React.createElement(DrawerOverlay, { className: classnames(this.state.isOpen && 'is-open'), onClick: this.props.backdrop === true ? this.onCloseDrawer : undefined })),
            React.createElement(theme.Theme, { values: theme$1 }, function (themeAttributes) { return (React.createElement(DrawerWrapper, { "data-testid": "Drawer-wrapper", theme: themeAttributes, className: classnames(_this.state.isOpen ? 'is-open' : 'is-closed', _this.props.className), role: "dialog", "aria-modal": "true", "aria-labelledby": _this.props.labelledById },
                React.createElement(common.FocusTrap, { active: _this.state.isOpen, onKeyDown: _this.handleKeyDown },
                    React.createElement(DrawerContext.Provider, { value: _this.getContextAPI() }, _this.state.isOpen && _this.props.children)))); })));
        return reactDom.createPortal(wrapper, this.el);
    };
    Drawer.defaultProps = {
        backdrop: 'static'
    };
    return Drawer;
}(React.Component));
var DrawerOverlay = styled__default('div')(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), DrawerOverlayStyles);
var DrawerWrapper = styled__default('div')(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject(["\n  ", ";\n  ", ";\n"], ["\n  ", ";\n  ", ";\n"])), function (props) { return DrawerBase(props); }, DrawerRight);
var templateObject_1$1, templateObject_2$1;

var DrawerBody = function (_a) {
    var className = _a.className, children = _a.children;
    return (React.createElement(DrawerContext.Consumer, null, function (api) { return (React.createElement(Scrollbars, { onScrollFrame: function (scroll) { return api.watchOverflow(scroll.top); } },
        React.createElement(Root, { className: className }, children))); }));
};
var Root = styled__default('div')(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n  padding: 26px 48px;\n"], ["\n  padding: 26px 48px;\n"])));
var templateObject_1$2;

var DrawerHeader = function (_a) {
    var className = _a.className, title = _a.title;
    return (React.createElement(DrawerContext.Consumer, null, function (api) { return (React.createElement(DrawerHeading, { className: classnames(api.overflow && 'is-overflow', className) },
        React.createElement(DrawerHeadingWrapper, null,
            React.createElement(DrawerTitle, { id: api.labelledById }, title),
            React.createElement(button.Button, { "data-testid": "DrawerHeader-closeButton", isIcon: true, onClick: api.onClose },
                React.createElement("i", { className: "icon-close" }))))); }));
};
var DrawerTitle = styled__default('h2')(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject(["\n  flex: 1 0 auto;\n  margin-bottom: 0;\n  font-size: 20px;\n  line-height: 28px;\n"], ["\n  flex: 1 0 auto;\n  margin-bottom: 0;\n  font-size: 20px;\n  line-height: 28px;\n"])));
var DrawerHeadingWrapper = styled__default('div')(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 26px 48px;\n"], ["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 26px 48px;\n"])));
var DrawerHeading = styled__default('div')(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject(["\n  height: 80px;\n  position: relative;\n  z-index: 1;\n\n  &.is-overflow {\n    box-shadow: ", ";\n  }\n"], ["\n  height: 80px;\n  position: relative;\n  z-index: 1;\n\n  &.is-overflow {\n    box-shadow: ", ";\n  }\n"])), theme.variables.layerShadows.layer100Shadow);
var templateObject_1$3, templateObject_2$2, templateObject_3$1;

var DrawerFooter = function (props) { return (React.createElement(theme.Theme, { values: theme$1 }, function (themeAttributes) { return React.createElement(Root$1, { theme: themeAttributes }, props.children); })); };
var Root$1 = styled__default('div')(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject(["\n  min-height: 88px;\n  max-height: 93px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 26px 48px 26px 48px;\n  text-align: right;\n  z-index: inherit;\n  background-color: ", ";\n  border-top: 1px solid ", ";\n"], ["\n  min-height: 88px;\n  max-height: 93px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 26px 48px 26px 48px;\n  text-align: right;\n  z-index: inherit;\n  background-color: ", ";\n  border-top: 1px solid ", ";\n"])), function (props) { return props.theme.backgroundColor; }, function (props) { return props.theme.borderColor; });
var templateObject_1$4;

exports.Drawer = Drawer;
exports.DrawerBody = DrawerBody;
exports.DrawerHeader = DrawerHeader;
exports.DrawerFooter = DrawerFooter;
//# sourceMappingURL=index.js.map
