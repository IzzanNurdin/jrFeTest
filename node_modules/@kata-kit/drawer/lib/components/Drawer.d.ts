import * as React from 'react';
export interface DrawerProps {
    isOpen: boolean;
    backdrop?: true | false | 'static';
    className?: string;
    labelledById?: string;
    onClose(): void;
}
export interface DrawerState {
    isOpen: boolean;
    overflow: boolean;
}
declare class Drawer extends React.Component<DrawerProps, DrawerState> {
    static defaultProps: {
        backdrop: string;
    };
    el: HTMLDivElement;
    constructor(props: DrawerProps);
    static getDerivedStateFromProps(props: DrawerProps, state: DrawerState): {
        isOpen: boolean;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prev: DrawerProps): void;
    reset(): void;
    handleKeyDown(event: React.KeyboardEvent): void;
    onCloseDrawer(): void;
    watchOverflow(position: number): void;
    getContextAPI(): {
        overflow: boolean;
        labelledById: string | undefined;
        watchOverflow: (position: number) => void;
        onClose: () => void;
    };
    render(): React.ReactPortal;
}
export default Drawer;
//# sourceMappingURL=Drawer.d.ts.map