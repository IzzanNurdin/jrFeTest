import * as React from 'react';
export interface TooltipTargetProps {
    component: React.ReactNode;
    children: React.ReactNode;
    placement?: 'top' | 'right' | 'bottom' | 'left';
    className?: string;
    defaultShow?: boolean;
    trigger?: string | string[];
    delay?: number;
    delayHide?: number;
    delayShow?: number;
    onClick?(): void;
    onMouseOver?(): void;
    onMouseOut?(): void;
    onFocus?(): void;
    onBlur?(): void;
}
interface TooltipTargetState {
    show: boolean;
}
export default class TooltipTarget extends React.Component<TooltipTargetProps, TooltipTargetState> {
    static defaultProps: Partial<TooltipTargetProps>;
    private node;
    private overlay;
    private targetNodePosition;
    private handleMouseOver;
    private handleMouseOut;
    private hoverShowDelay;
    private hoverHideDelay;
    constructor(props: any);
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    handleToggle(): void;
    handleMouseOverOut(handler: any, e: any, relatedNative: string): void;
    handleDelayedHide: () => void;
    handleDelayedShow: () => void;
    renderOverlay: () => void;
    show(): void;
    hide(): void;
    createOverlay(component: any, overlayProps: any): JSX.Element;
    render(): React.ReactElement<any>;
}
export {};
//# sourceMappingURL=TooltipTarget.d.ts.map