'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var shortid = require('shortid');
var React = require('react');
var classnames = _interopDefault(require('classnames'));
var styled = require('styled-components');
var styled__default = _interopDefault(styled);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var Circle = function (_a) {
    var className = _a.className, size = _a.size;
    return (React.createElement(Root, { className: className, title: "0" },
        React.createElement("svg", { version: "1.1", id: shortid.generate(), "data-testid": "circle-icon", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", width: size + "px", height: size + "px", viewBox: "0 0 40 40", enableBackground: "new 0 0 40 40", xmlSpace: "preserve" },
            React.createElement("path", { opacity: "0.2", fill: "#000", d: "M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946 s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634 c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z" }),
            React.createElement("path", { fill: "#000", d: "M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z" },
                React.createElement("animateTransform", { attributeType: "xml", attributeName: "transform", type: "rotate", from: "0 20 20", to: "360 20 20", dur: "0.5s", repeatCount: "indefinite" })))));
};
Circle.defaultProps = {
    size: 40
};
var Root = styled__default('div')(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n\n  & svg path,\n  & svg rect {\n    fill: #006fe6 /* $kata-blue */;\n  }\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n\n  & svg path,\n  & svg rect {\n    fill: #006fe6 /* $kata-blue */;\n  }\n"])));
var templateObject_1;

var Loader = require('../images/loader.svg');
var Robot = function (props) {
    return (React.createElement(LoadingContainer, null,
        React.createElement("img", { src: Loader, alt: "" })));
};
var LoadingContainer = styled__default.div(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 1;\n  height: 160px;\n  width: 200px;\n  transform: translate(-50%, -50%);\n"], ["\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 1;\n  height: 160px;\n  width: 200px;\n  transform: translate(-50%, -50%);\n"])));
var templateObject_1$1;

var InfiniteScrollSpinner = function (props) {
    var classname = classnames(props.bsStyle);
    return (React.createElement(Wrapper, { bsStyle: props.bsStyle, "data-testid": "infinite-scroll-icon", sm: props.sm, lg: props.lg, className: classname },
        React.createElement("div", { className: "bounce1" }),
        React.createElement("div", { className: "bounce2" }),
        React.createElement("div", { className: "bounce3" })));
};
InfiniteScrollSpinner.defaultProps = {
    bsStyle: 'gray',
    sm: false,
    lg: false
};
var bounceDelay = styled.keyframes(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n  0%,\n  80%,\n  100% {\n    -webkit-transform: scale(0);\n  }\n  40% {\n    -webkit-transform: scale(1);\n  }\n"], ["\n  0%,\n  80%,\n  100% {\n    -webkit-transform: scale(0);\n  }\n  40% {\n    -webkit-transform: scale(1);\n  }\n"])));
var Wrapper = styled__default('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  width: auto;\n  display: inline-block;\n  text-align: center;\n\n  > div {\n    width: ", ";\n    height: ", ";\n    background-color: #24282d;\n    margin: 0 3px;\n\n    border-radius: 100%;\n    display: inline-block;\n    -webkit-animation: ", " 1.6s infinite ease-in-out both;\n    animation: ", " 1.6s infinite ease-in-out both;\n  }\n\n  & .bounce1 {\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n  }\n\n  & .bounce2 {\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n  }\n\n  &.primary > div {\n    background-color: #2a90ff;\n  }\n\n  &.gray > div {\n    background-color: #949a9d;\n  }\n\n  &.white > div {\n    background-color: #fff;\n  }\n"], ["\n  width: auto;\n  display: inline-block;\n  text-align: center;\n\n  > div {\n    width: ", ";\n    height: ", ";\n    background-color: #24282d;\n    margin: 0 3px;\n\n    border-radius: 100%;\n    display: inline-block;\n    -webkit-animation: ", " 1.6s infinite ease-in-out both;\n    animation: ", " 1.6s infinite ease-in-out both;\n  }\n\n  & .bounce1 {\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n  }\n\n  & .bounce2 {\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n  }\n\n  &.primary > div {\n    background-color: #2a90ff;\n  }\n\n  &.gray > div {\n    background-color: #949a9d;\n  }\n\n  &.white > div {\n    background-color: #fff;\n  }\n"])), function (props) { return (props.lg ? '15px' : props.sm ? '5px' : '8px'); }, function (props) { return (props.lg ? '15px' : props.sm ? '5px' : '8px'); }, bounceDelay, bounceDelay);
var templateObject_1$2, templateObject_2;

exports.Robot = Robot;
exports.Circle = Circle;
exports.InfiniteScrollSpinner = InfiniteScrollSpinner;
//# sourceMappingURL=index.js.map
