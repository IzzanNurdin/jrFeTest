import { createPortal } from 'react-dom';
import { FocusTrap } from '@kata-kit/common';
import classnames from 'classnames';
import { Button } from '@kata-kit/button';
import { createElement, Component, createContext } from 'react';
import styled, { css } from 'styled-components';
import { variables, Theme } from '@kata-kit/theme';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var theme = {
    backgroundColor: variables.colors.white,
    textColor: variables.colors.gray80,
    borderColor: variables.colors.gray30
};

var modalBoxShadow = '0 4px 6px 2px rgba(0, 0, 0, 0.15)';
var modalTransition = 'cubic-bezier(0.15, 1, 0.3, 1)';
var ModalBase = function (props) {
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    min-height: 1px;\n    z-index: 1050;\n    transition: opacity 0.15s ease-out;\n    visibility: hidden;\n\n    &.is-open {\n      visibility: visible;\n    }\n  "], ["\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    min-height: 1px;\n    z-index: 1050;\n    transition: opacity 0.15s ease-out;\n    visibility: hidden;\n\n    &.is-open {\n      visibility: visible;\n    }\n  "])));
};
var ModalContentStyles = function (props) {
    return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    display: flex;\n    flex-direction: column;\n    pointer-events: auto;\n    border-width: 0;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: ", ";\n    background-color: ", ";\n    color: ", ";\n  "], ["\n    display: flex;\n    flex-direction: column;\n    pointer-events: auto;\n    border-width: 0;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: ", ";\n    background-color: ", ";\n    color: ", ";\n  "])), modalBoxShadow, props.theme.backgroundColor, props.theme.textColor);
};
var ModalDialogStyles = function (props) {
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    position: relative;\n    width: 100%;\n    max-width: 500px;\n    margin: 1.75rem auto;\n    transform: translate(0, -25%);\n    transition: all 0.5s ", ";\n    opacity: 0;\n\n    &.is-open {\n      transform: translate(0, 0);\n      opacity: 1;\n    }\n  "], ["\n    position: relative;\n    width: 100%;\n    max-width: 500px;\n    margin: 1.75rem auto;\n    transform: translate(0, -25%);\n    transition: all 0.5s ", ";\n    opacity: 0;\n\n    &.is-open {\n      transform: translate(0, 0);\n      opacity: 1;\n    }\n  "])), modalTransition);
};
var ModalOverlayStyles = css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.5s ", ";\n\n  &.is-open {\n    opacity: 0.65;\n    visibility: visible;\n  }\n"], ["\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.5s ", ";\n\n  &.is-open {\n    opacity: 0.65;\n    visibility: visible;\n  }\n"])), modalTransition);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;

var ModalContext = createContext({});

var preventEventPropagation = function (event) {
    event.preventDefault();
    event.stopPropagation();
};
var ModalDialog = function (_a) {
    var className = _a.className, children = _a.children;
    return (createElement(ModalContext.Consumer, null, function (api) { return (createElement(Theme, { values: theme }, function (themeAttributes) { return (createElement(Root, { className: classnames(api.show ? 'is-open' : 'is-closed', className), theme: themeAttributes, onClick: preventEventPropagation },
        createElement(ModalContent, { theme: themeAttributes }, children))); })); }));
};
var ModalContent = styled('div')(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), function (props) { return ModalContentStyles(props); });
var Root = styled('div')(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), function (props) { return ModalDialogStyles(props); });
var templateObject_1$1, templateObject_2$1;

var Modal = (function (_super) {
    __extends(Modal, _super);
    function Modal(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            show: false,
            visible: false
        };
        _this.el = document.createElement('div');
        _this.onCloseDrawer = _this.onCloseDrawer.bind(_this);
        _this.watchOverflow = _this.watchOverflow.bind(_this);
        _this.getContextAPI = _this.getContextAPI.bind(_this);
        _this.handleKeyDown = _this.handleKeyDown.bind(_this);
        return _this;
    }
    Modal.getDerivedStateFromProps = function (props, state) {
        if (!props.show) {
            return {
                show: props.show,
                visible: false
            };
        }
        return {
            show: props.show,
            visible: true
        };
    };
    Modal.prototype.componentDidMount = function () {
        try {
            document.body.appendChild(this.el);
        }
        catch (error) {
        }
    };
    Modal.prototype.componentWillUnmount = function () {
        try {
            document.body.removeChild(this.el);
        }
        catch (error) {
        }
    };
    Modal.prototype.handleKeyDown = function (event) {
        if (event.key === 'Escape') {
            this.onCloseDrawer();
        }
    };
    Modal.prototype.onCloseDrawer = function () {
        this.props.onClose();
    };
    Modal.prototype.watchOverflow = function (position) {
        if (position > 0.05) {
            this.setState({ visible: true });
        }
        else {
            this.setState({ visible: false });
        }
    };
    Modal.prototype.getContextAPI = function () {
        return {
            show: this.state.show,
            overflow: this.state.visible,
            labelledById: this.props.labelledById,
            watchOverflow: this.watchOverflow,
            onClose: this.onCloseDrawer
        };
    };
    Modal.prototype.render = function () {
        var _this = this;
        var wrapper = (createElement(FocusTrap, { active: this.state.show, onKeyDown: this.handleKeyDown },
            !this.props.noBackdrop && (createElement(ModalOverlay, { className: classnames(this.state.show ? 'is-open' : 'is-closed'), onClick: this.onCloseDrawer })),
            createElement(Theme, null, function (themeAttributes) { return (createElement(ModalWrapper, __assign({ "data-testid": "Modal-wrapper", className: classnames(_this.state.show ? 'is-open' : 'is-closed', _this.props.className), onClick: !_this.props.noBackdrop ? _this.onCloseDrawer : undefined, role: "dialog", "aria-modal": "true", "aria-labelledby": _this.props.labelledById }, themeAttributes),
                createElement(ModalContext.Provider, { value: _this.getContextAPI() },
                    createElement(ModalDialog, null, _this.props.children)))); })));
        return createPortal(wrapper, this.el);
    };
    Modal.defaultProps = {
        noBackdrop: false
    };
    return Modal;
}(Component));
var ModalOverlay = styled('div')(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), ModalOverlayStyles);
var ModalWrapper = styled('div')(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), function (props) { return ModalBase(props); });
var templateObject_1$2, templateObject_2$2;

var ModalBody = function (_a) {
    var className = _a.className, children = _a.children;
    return (createElement(Root$1, { className: className }, children));
};
var Root$1 = styled('div')(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject(["\n  padding: 0 1.84615rem 3.07692rem;\n"], ["\n  padding: 0 1.84615rem 3.07692rem;\n"])));
var templateObject_1$3;

var ModalHeader = function (_a) {
    var className = _a.className, title = _a.title;
    return (createElement(ModalContext.Consumer, null, function (api) { return (createElement(ModalHeading, { className: className },
        createElement(ModalHeadingWrapper, null,
            createElement(ModalTitle, { id: api.labelledById }, title),
            createElement(Button, { "data-testid": "ModalHeader-closeButton", isIcon: true, onClick: api.onClose },
                createElement("i", { className: "icon-close" }))))); }));
};
var ModalTitle = styled('h2')(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject(["\n  flex: 1 0 auto;\n  margin-bottom: 0;\n  font-size: 20px;\n  line-height: 28px;\n"], ["\n  flex: 1 0 auto;\n  margin-bottom: 0;\n  font-size: 20px;\n  line-height: 28px;\n"])));
var ModalHeadingWrapper = styled('div')(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 18px 24px 14px;\n"], ["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 18px 24px 14px;\n"])));
var ModalHeading = styled('div')(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject(["\n  position: relative;\n  z-index: 1;\n\n  &.is-overflow {\n    box-shadow: ", ";\n  }\n"], ["\n  position: relative;\n  z-index: 1;\n\n  &.is-overflow {\n    box-shadow: ", ";\n  }\n"])), variables.layerShadows.layer100Shadow);
var templateObject_1$4, templateObject_2$3, templateObject_3$1;

var ModalFooter = function (props) { return (createElement(Theme, { values: theme }, function (themeAttributes) { return createElement(Root$2, { theme: themeAttributes }, props.children); })); };
var Root$2 = styled('div')(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject(["\n  padding: 1.23077rem 1.84615rem;\n  text-align: right;\n  z-index: inherit;\n  background-color: ", ";\n  border-top: 1px solid ", ";\n"], ["\n  padding: 1.23077rem 1.84615rem;\n  text-align: right;\n  z-index: inherit;\n  background-color: ", ";\n  border-top: 1px solid ", ";\n"])), function (props) { return props.theme.backgroundColor; }, function (props) { return props.theme.borderColor; });
var templateObject_1$5;

export { Modal, ModalBody, ModalHeader, ModalFooter };
//# sourceMappingURL=index.es.js.map
